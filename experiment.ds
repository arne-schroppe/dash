


/--
check-maybe x <maybe> =
  a <- might-fail
  b <- might-also-fail
  wrap $ a + b
--/


/--
rec n =
  match n - 1 begin
    0 -> 4
    x ->
      rec x
  end


rec 4000000



--/

/--

fib n =
  match n begin
    0 -> 0
    1 -> 1
    _ -> (fib (n - 1)) + (fib (n - 2))
  end

fib 35

--/

/--
test-list l =
  match l begin
    []             -> :empty
    [1]            -> :a
    [1, 2]         -> :b
    [a, 3]         -> :c
    [1 | [2 | [3 | []]]] -> :test
    [1, 2, 3 | tl] -> :d
  end

test-list [1, 2, 3]
--/

/--
a = [1, 2, 3]

b = [2, 3 | a]

c = [2, 3, 4 | [5, 6, 7]]

d = [2, 3, 4] ++ [5, 6, 7]

--/


/--
cons a as = :list a as

head ls =
  match ls begin
    [a | _] -> a
    _ -> :error
  end

tail ls =
  match ls begin
    [_ | as] -> as
    _ -> []
  end

map f ls =
  match ls begin
    [] -> []
    [a|rest] -> cons (f a) (map f rest)
  end


ls = cons 1 [2, 3, 4]

-- map ( .\ a = a * 2 ) ls

pl a b = a + b

foldr pl 0 ls

--/

/--
guess s =
  match string-length s begin
    4 -> "Win!"
    _ -> "Fail!"
  end

guess "dash!"
--/

foldr f i ls =
  match ls begin
    [] -> i
    [a|rest] -> f a (foldr f i rest)
  end


concat-list a b =
  match a begin
    []      -> b
    [hd|tl] -> [hd | concat-list tl b]
  end

reverse-list l =
  rev-list' l acc =
    match l begin
      []      -> acc
      [hd|tl] -> rev-list' tl [hd | acc]
    end
  rev-list' l []

-- tl = [3, 4]
-- reverse-list [1, 2 | tl]

replicate n v =
  match n begin
    0 -> []
    _ -> [v | replicate (n - 1) v]
  end

lyrics = (concat-list (replicate 16 (sub-string 2 2 "banana")) ["Batmaaan!"])

combined-lyrics = foldr ( .\ a b = a ++ " " ++ b ) "" lyrics

chunk-string n s =
  len = string-length s
  if len <= n then
    [s]
  else
    chunk = sub-string 0 n s
    rest = sub-string n (len - n) s
    rest-length = string-length rest
    if rest-length <= n then
      [chunk, rest]
    else
      [chunk | chunk-string n rest]


let chunky = chunk-string 4 combined-lyrics

-- TODO add namespaces / static modules
do io begin
  name <- io-read-line ""
  io-print-line ("Hello " ++ name)
end


