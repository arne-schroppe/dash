


/--
check-maybe x <maybe> =
  a <- might-fail
  b <- might-also-fail
  wrap $ a + b
--/


/--
rec n =
  match n - 1 begin
    0 -> 4
    x ->
      rec x
  end


rec 4000000



--/

/--

fib n =
  match n begin
    0 -> 0
    1 -> 1
    _ -> (fib (n - 1)) + (fib (n - 2))
  end

fib 35

--/

/--
test-list l =
  match l begin
    []             -> :empty
    [1]            -> :a
    [1, 2]         -> :b
    [a, 3]         -> :c
    [1 | [2 | [3 | []]]] -> :test
    [1, 2, 3 | tl] -> :d
  end

test-list [1, 2, 3]
--/

/--
a = [1, 2, 3]

b = [2, 3 | a]

c = [2, 3, 4 | [5, 6, 7]]

d = [2, 3, 4] ++ [5, 6, 7]

--/


cons a as = :list a as


ls = cons 1 [2, 3, 4]

match ls begin
  [1, 2 | x] -> x
  _ -> :error
end


